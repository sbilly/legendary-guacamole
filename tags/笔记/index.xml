<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记 | Keep Simple, Make Fun.</title>
    <link>https://sbilly.github.io/tags/%E7%AC%94%E8%AE%B0/</link>
      <atom:link href="https://sbilly.github.io/tags/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <description>笔记</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>zh</language><copyright>2019 ©</copyright><lastBuildDate>Sun, 11 Aug 2019 13:37:25 +0800</lastBuildDate>
    <image>
      <url>https://sbilly.github.io/img/icon-192.png</url>
      <title>笔记</title>
      <link>https://sbilly.github.io/tags/%E7%AC%94%E8%AE%B0/</link>
    </image>
    
    <item>
      <title>BlackHat US-19 笔记</title>
      <link>https://sbilly.github.io/post/blackhat-us-2019-slides-reading-notes/</link>
      <pubDate>Sun, 11 Aug 2019 13:37:25 +0800</pubDate>
      <guid>https://sbilly.github.io/post/blackhat-us-2019-slides-reading-notes/</guid>
      <description>

&lt;h2 id=&#34;读后感&#34;&gt;读后感&lt;/h2&gt;

&lt;p&gt;看完 BlackHat 2019 的这些议题，我个人最强烈的感受就是企业承担的信息安全责任应该是有前提和有边界的，不应该是无前提和无边界的。如果拿消防做类比，在现行的治理框架下如果一个企业因为不可抗力或者被纵火，如果企业本身无过失（合规）的情况下一般只需要承担民事责任而没有刑事责任。美国的治理体系中就有这样的例子 —— FireEye 就获得了 SAFETY Act Certification 认证，&lt;a href=&#34;https://www.fireeye.com/company/awards/safety-act-certification-and-fireeye-products.html&#34; target=&#34;_blank&#34;&gt;FireEye 的用户可以在某种情况下免于被起诉&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;在《&lt;a href=&#34;us-19-Conti-Operational-Templates-for-State-Level-Attack-and-Collective-Defense-of-Countries.pdf&#34; target=&#34;_blank&#34;&gt;Operational Templates for State-Level Attack and Collective Defense of Countries&lt;/a&gt;》里有几张图也表达了这个意思 —— 商业公司缺乏足够的资源与国家层面的威胁对抗。攻击方可以在各个层面寻找脆弱性来突破。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654181329540.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654196349463.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;就像《&lt;a href=&#34;us-19-Pavur-GDPArrrrr-Using-Privacy-Laws-To-Steal-Identities.pdf&#34; target=&#34;_blank&#34;&gt;GDPArrrrr: Using Privacy Laws to Steal Identities&lt;/a&gt;》所实践的 —— 连 GPDR 这样的隐私法案都能被利用来窃取隐私。而防守方以 Google Project Zero 这样的实力，也只能聚焦于二进制方向，漏洞挖掘也是以手工挖掘漏洞为主、辅助以半自动化的 Fuzzing 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654340825160.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654363276071.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654366981174.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654367742188.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654171165908.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654171367327.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;blackhat-us19-议题笔记&#34;&gt;BlackHat US19 议题笔记&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Almubayed-Practical-Approach-To-Automate-The-Discovery-And-Eradication-Of-Open-Source-Software-Vulnerabilities-At-Scale.pdf&#34; target=&#34;_blank&#34;&gt;Practical Approach to Automate the Discovery and Eradication of Open-Source Software Vulnerabilities at Scale&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;国内国外都一样，安全管理员觉得最坑的场景之一就是某一天又爆发一个不得不补的远程执行漏洞。现在的软件生态包依赖关系非常复杂，软件供应链安全也非常复杂。演讲者认为需要遵循这几个原则：可扩展、自动化、高研发效率、关注兼容性。对漏洞的维度进行排序，分清主次才能进行有效的修复。一方面要从多个数据源（开源或商业化）收集漏洞、威胁相关的信息；另一方面，也需要通过自动化构建过程对自己的 IT 环境有足够的了解。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653598646612.jpg&#34; alt=&#34;-w800&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653605758169.jpg&#34; alt=&#34;-w800&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653614862053.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653609908146.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653617912984.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf&#34; target=&#34;_blank&#34;&gt;Host/Split: Exploitable Antipatterns in Unicode Normalization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要是描述了一个因为 IDN 支持 unicode 以后带来的安全风险。很多大厂、很多软件、很多语言都受影响。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653647015903.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Bitan-Rogue7-Rogue-Engineering-Station-Attacks-On-S7-Simatic-PLCs.pdf&#34; target=&#34;_blank&#34;&gt;Rogue7: Rogue Engineering-Station attacks on S7 Simatic PLCs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;新发现的 PLC 操作系统的漏洞（和 S7 协议相关）。加上 ICS 安全的背景、全貌，以及这个漏洞的技术分析。这个议题在 ICS 方向讲得比较完整。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653650152855.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Brand-WebAuthn-101-Demystifying-WebAuthn.pdf&#34; target=&#34;_blank&#34;&gt;WebAuthn 101 - Demystifying WebAuthn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要是介绍 WebAuthn 和 FIDO2 的好处。我对这种既改善用户体验、又增强安全性的方案是非常期望看到的。现在各方力量都在联合推动无密码认证的实现，DISA 下一步的现代化计划中也增加了改善用户认证，实现无密码认证的目标。目前，国民电子也在国内推 FIDO2 的相关方案。&lt;/p&gt;

&lt;p&gt;除此之外，这里面有不少统计数据是值得看的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;91% 的信息安全事件和钓鱼有关&lt;/li&gt;
&lt;li&gt;80% 的针对商业机构的攻击行动中使用了钓鱼&lt;/li&gt;
&lt;li&gt;2016 年之后，钓鱼在攻击行动中使用超过了 exploit&lt;/li&gt;
&lt;li&gt;76% 的账号安全漏洞与弱密码或密码被窃取有关&lt;/li&gt;
&lt;li&gt;一个设计良好的钓鱼页面有 43% 的成功率&lt;/li&gt;
&lt;li&gt;使用生物特征进行重新验证，98% 的用户可以在 38 秒内完成，而使用用户名密码进行重新验证，98% 的用户要花 150 秒&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653653084670.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653653413046.jpg&#34; alt=&#34;-w300&#34; /&gt;
&lt;img src=&#34;media/15653591872010/15653653801597.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653655934548.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653655326116.jpg&#34; alt=&#34;-w300&#34; /&gt;
&lt;img src=&#34;media/15653591872010/15653655558021.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653659341541.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653659750166.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653660101127.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Cai-0-Days-And-Mitigations-Roadways-To-Exploit-And-Secure-Connected-BMW-Cars.pdf&#34; target=&#34;_blank&#34;&gt;0-Days &amp;amp; Mitigations: Roadways to Exploit and Secure Connected BMW Cars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;科恩实验室挖 BMW 车载系统漏洞的过程，非常好的 IoT 产品攻击面分析的范例。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653667149091.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Campana-Everybody-Be-Cool-This-Is-A-Robbery.pdf&#34; target=&#34;_blank&#34;&gt;Everybody be Cool, This is a Robbery!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不论是中国还是美国，高安全级别的系统一般都引入了 HSM 。这篇介绍了直接针对 HSM 的攻击，其实越小众的产品，安全性越差。在这个演示中的测试的 HSM 和前面那篇车载系统一样，选用的系统版本比较老，新一点的 Linux 自身内核保护机制都没有。只要存在漏洞，基本就会被利用。HSM 存在漏洞会直接破坏信任根，甚至在系统中提供一个非常隐蔽的持久据点。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653673278472.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653673491823.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Carcano-The-Future-Of-Securing-IED-Using-The-IEC62351-7-Standard-For-Monitoring.pdf&#34; target=&#34;_blank&#34;&gt;The Future of Securing Intelligent Electronic Devices Using the IEC 62351-7 Standard for Monitoring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要是介绍了一下电网安全的 IEC 62351-7 标准、以及电网的安全环境和挑战、以及几个场景的 DEMO&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653678486345.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Conti-Operational-Templates-for-State-Level-Attack-and-Collective-Defense-of-Countries.pdf&#34; target=&#34;_blank&#34;&gt;Operational Templates for State-Level Attack and Collective Defense of Countries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;面对国家攻击的时候应该采用集体防御的方法，根据不同级别的安全威胁应该有不同级别的安全事件响应机制。各个层面都会有自己各自的脆弱性，在国家级的对抗中，攻击者不会放过任何一个可以利用的脆弱性。目前 Known/Knowing 的问题解决方法基本都有了，需要自动化来提高效率、改善体验、释放“资源”（这里的“资源“是指广义的资源，甚至包括产业界的关注度），并获得更多的资源投入到需要 “Behavioral Analytics + Hunting” 的范围内。&lt;/p&gt;

&lt;p&gt;除此之外，我觉得可能还给网络安全执法提供了合法性相关的思路：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* 为了减少火灾，会进行相关的防火教育和检查，并有严格的合规要求
* 如果发现你家着火，为了确保公众安全，公众的消防力量有主动进行灭火的义务和权力
* 发生火灾给第三方造成损失的，会有民事责任、刑事责任
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654191308613.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653687430843.jpg&#34; alt=&#34;-w300&#34; /&gt;
&lt;img src=&#34;media/15653591872010/15653686514831.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Davidov-Inside-The-Apple-T2.pdf&#34; target=&#34;_blank&#34;&gt;Inside The Apple T2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;苹果设备中有一块 T2 的芯片，这块芯片夹在 CPU 和硬件设备之间，增加了额外的安全保障和控制。这篇主要是对其软硬件工作机制进行了分析。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653699445151.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653700955524.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15653701581991.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Doerr-The-Enemy-Within-Modern-Supply-Chain-Attacks.pdf&#34; target=&#34;_blank&#34;&gt;The Enemy Within Modern Supply Chain Attacks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;微软内部安全团队认为要从硬件、软件、服务、人这四个维度考虑供应链安全，每个部分都举了一个例子。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653705673135.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Edwards-Compendium-Of-Container-Escapes.pdf&#34; target=&#34;_blank&#34;&gt;A Compendium of Container Escapes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Docker 不是虚拟机，提供的隔离能力有限，这里介绍了三大类的绕过方式，从原理到代码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15653716564331.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Farshchi-On-Trust-Stories-From-The-Front-Lines.pdf&#34; target=&#34;_blank&#34;&gt;ON TRUST - Stories from the Front Lines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最最最水&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Franceschi-Bicchierai-The-Discovery-Of-A-Government-Malware-And-An-Unexpected-Spy-Scandal.pdf&#34; target=&#34;_blank&#34;&gt;The Discovery of a Government Malware and an Unexpected Spy Scandal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;标题就看出来了 …… 意大利某“违法”监听调查分析&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654110727921.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Hauke-Denial-Of-Service-With-A-Fistful-Of-Packets-Exploiting-Algorithmic-Complexity-Vulnerabilities.pdf&#34; target=&#34;_blank&#34;&gt;Denial of Service with a Fistful of Packets: Exploiting Algorithmic Complexity Vulnerabilities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AC 匹配的漏洞，并且介绍了 ACsploit 这个工具箱。这类漏洞比较有名的就是 CloudFlare 在 2019 年 7 月份那次因为正则表达式导致全球性故障。&lt;/p&gt;

&lt;p&gt;里面提出了一个观点比较有意思 —— AC 匹配的漏洞并不是实现层面的 BUG ，而是设计层面的问题。个人并不是很赞同这个观点，bug 并不局限于实现层面。只要是出现了不符合预期的结果，某种意义上都是 bug 。而 AC 匹配相关的这类漏洞，应该是设计者没有考虑各种最坏的情况可能出现的问题，从而导致了漏洞产生。和没有考虑用户输入可能导致命令执行类似。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654118589379.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654119371191.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654117966384.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Hawkes-Project-Zero-Five-Years-Of-Make-0day-Hard.pdf&#34; target=&#34;_blank&#34;&gt;Google Project Zero&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Google 这篇主要是介绍了 Project Zero 的一些数据来佐证观点。干货不多感觉主要是保持曝光。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654171165908.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654171367327.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Healey-Rough-and-Ready-Frameworks-To-Measure-Persistent-Engagment-and-Deterrence.pdf&#34; target=&#34;_blank&#34;&gt;Rough and Ready: Frameworks to Measure Persistent Engagement and Deterrence&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;讲了一堆对持续威胁进行度量的意义、为什么要有度量，提出了一个三万英尺的框架。以及一堆未来的工作。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Hoelzel-How-To-Detect-That-Your-Domains-Are-Being-Abused-For-Phishing-By-Using-DNS.pdf&#34; target=&#34;_blank&#34;&gt;How to detect that your domains are being abused for phishing attacks by using DNS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要讲了一下在 DNS 层面可以做哪些事情来避免自己邮件域不会被用于钓鱼。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654218119402.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654217902153.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Howes-Securing-Apps-In-The-Open-By-Default-Cloud.pdf&#34; target=&#34;_blank&#34;&gt;Securing Apps in the Open-By-Default Cloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;snapchat 在公有云基础上应用安全的实践。snapchat 大量使用了AWS/GCP，在公有云上有一些限制，例如：没有办法获得一个仅为内部使用的网络基础设施、AWS/GCP 提供的控制点选项并不多、像 AppEngine 这样的服务必须直接暴露在互联网上、缺乏集中的 CI/CD 管道、使用大量技术带来技术栈复杂度高。&lt;/p&gt;

&lt;p&gt;snapchat 在软件生命周期中把所有的服务分成 UnManaged 和 Managed 两个阶段。在 UnManaged 阶段，主要是防火墙和无状态的认证（AuthN）和授权（AuthZ）代理，而在 Managed 阶段，主要是通过服务网格以及其 API Gateway 来进行管理。对于比较老的应用，则应该及时关注其状态和安全告警。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654244942637.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654250820930.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654256831681.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654251304249.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654255470708.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Huang-Towards-Discovering-Remote-Code-Execution-Vulnerabilities-In-Apple-FaceTime.pdf&#34; target=&#34;_blank&#34;&gt;Towards Discovering Remote Code Execution Vulnerabilities in Apple FaceTime&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;盘古带来的 FaceTime 远程代码执行漏洞分析。介绍了 iOS/macOS 中 FaceTime 的流程、攻击面分析、漏洞发现和利用。FaceTime 的通信过程有完整的可信链，苹果公司的安全架构设计绝对值得看一下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654260992836.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Jaiswal-Preventing-Authentication-Bypass-A-Tale-Of-Two-Researchers.pdf&#34; target=&#34;_blank&#34;&gt;Preventing Authentication Bypass A Tale of Two Researchers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要是讲了两个身份认证绕过的漏洞案例。这两个漏洞影响 Outlook/Live/Hotmail 的所有用户，攻击者可以获取被攻击者的所有邮件。主要的突破口就是在新版本上线引入的未签名 JWT Token 。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Jerkeby-Command-Injection-In-Irules-Loadbalancer-Scripts.pdf&#34; target=&#34;_blank&#34;&gt;COMMAND INJECTION IN IRULES LOADBALANCER SCRIPTS - A story about how TCL interpretation works in F5 iRules and how it can be detected or exploited&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要是讲 F5 的内置规则引擎 iRule 规则的利用。F5 应用范围很广（包括 DoD 也在大量使用）。但这个漏洞并不是很好评价，不知道 iRule 缺省是否存在并被启用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654275398688.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Kotler-Process-Injection-Techniques-Gotta-Catch-Them-All.pdf&#34; target=&#34;_blank&#34;&gt;Windows Process Injection in 2019&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SafeBreach 搞了一个可以在最新版 Windows 10 x64 上进行进程注入的 C/C++ 库： &lt;a href=&#34;https://github.com/SafeBreach-Labs/pinjectra&#34; target=&#34;_blank&#34;&gt;Pinjectra&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654282480908.jpg&#34; alt=&#34;-w600&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Lilang-Debug-For-Bug-Crack-And-Hack-Apple-Core-By-Itself-Fun-And-Profit-To-Debug-And-Fuzz-Apple-Kernel-By-LLDB-Script.pdf&#34; target=&#34;_blank&#34;&gt;Debug for bug: Crack and Hack Apple Core by itself&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;macOS 的内核/驱动 Fuzz 研究。发现了不少显卡驱动的漏洞。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Lynch-Woke-Hhiring-Wont-Save-Us-An-Actionable-Approach-To-Diversity-Hiring-And-Retention.pdf&#34; target=&#34;_blank&#34;&gt;Woke Hiring Won&amp;rsquo;t Save Us: An Actionable Approach to Diversity Hiring and Retention&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要是说女性在 IT 行业招聘和保留的问题。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Lynch-Woke-Hhiring-Wont-Save-Us-An-Actionable-Approach-To-Diversity-Hiring-And-Retention.pdf&#34; target=&#34;_blank&#34;&gt;API-Induced SSRF - How Apple Pay Scattered Vulnerabilities Across the Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要是苹果公司在 Apple Pay 上一个漏洞响应措施比较让人不满意。这个作者喷了一通，并且提出了一个有意思的观点：有缺陷的设计模式导致了有缺陷的实现，有缺陷的实现导致了有缺陷的部署。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654298293684.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654293378265.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654293633681.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Lynch-Woke-Hhiring-Wont-Save-Us-An-Actionable-Approach-To-Diversity-Hiring-And-Retention.pdf&#34; target=&#34;_blank&#34;&gt;The Future of Account Takeover&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;币圈的 coinbase 讲了一下账号窃取的一些事情。换卡、账号找回的滥用、钓鱼、撞库、社会工程、恶意代码、以及利用 SEO 冒充官方技术支持等一些攻击技巧。…… 等等，这些怎么在国内好像都看过呢？！😓&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Matrosov-Breaking-Through-Another-Side-Bypassing-Firmware-Security-Boundaries-From-Embedded-Controller.pdf&#34; target=&#34;_blank&#34;&gt;Breaking Through Another Side - Bypassing Firmware Security Boundaries from Embedded Controller&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;硬核的 x86 平台硬件/固件安全。这个架构和《&lt;a href=&#34;us-19-Davidov-Inside-The-Apple-T2.pdf&#34; target=&#34;_blank&#34;&gt;Inside The Apple T2&lt;/a&gt;》这篇文章中苹果的架构一起对比来看，非常有意思。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654328401505.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654328816020.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654330383563.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Nakajima-Women-In-Security-Building-A-Female-InfoSec-Community-In-Korea-Japan-And-Taiwan.pdf&#34; target=&#34;_blank&#34;&gt;Building a Female InfoSec Community in Korea, Japan, and Taiwan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如何让信息安全不再是男人统治的领域。加油！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Pavur-GDPArrrrr-Using-Privacy-Laws-To-Steal-Identities.pdf&#34; target=&#34;_blank&#34;&gt;GDPArrrrr: Using Privacy Laws to Steal Identities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在 GPDR 法案颁布以后，演讲者利用隐私保护法案来盗取身份信息，按照 Kill-Chain 的思路把整个过程讲了一遍。整个过程的核心是 GPDR 中要求：服务商必须对外公布联系方式，通过这个联系方式，用户可以申请自己所有的个人信息，而服务商需要在一个自然月以内向用户提供可机读的个人信息。个人觉得国内这么搞一下，然后出国去讲，很可能被请喝茶。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654341433711.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654340825160.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654358926051.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654359442090.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654360197728.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654360478216.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654360638454.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654361042671.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654361565895.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654362245877.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654363276071.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654366981174.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654367222044.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654367582753.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654367742188.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Perlman-Hacking-Ten-Million-Useful-Idiots-Online-Propaganda-As-A-Socio-Technical-Security-Project.pdf&#34; target=&#34;_blank&#34;&gt;Hacking Ten Million Useful Idiots: Online Propaganda as a Socio-Technical Security Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;错误信息是一个社会层面的安全问题，会带来各种物理、经济方面的影响。还提出了一个 AMITT 的框架。算是社会学范安全的领域吧。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654390376717.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654390870350.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Peterlin-Breaking-Samsungs-ARM-TrustZone.pdf&#34; target=&#34;_blank&#34;&gt;Breaking Samsung&amp;rsquo;s ARM TrustZone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;简单介绍了三种不同类型的可信执行的环境，并详细介绍了如何攻破三星的 ARMv7 的 TrustZone 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654396394106.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Pi-Exploiting-Qualcomm-WLAN-And-Modem-Over-The-Air.pdf&#34; target=&#34;_blank&#34;&gt;Exploiting Qualcomm WLAN And Modem Over-The-Air&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在博通、Marvell 等 WiFi 被安全社区发现漏洞之后，腾讯 Blade Team 决定研究下高通 WiFi 芯片。结果搞定了从 OTA -&amp;gt; WALN -&amp;gt; Modem -&amp;gt; Kernel 的全链条，可以从无线网控制设备。😱&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654419124544.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654418647448.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Price-Playing-Offense-And-Defense-With-Deepfakes.pdf&#34; target=&#34;_blank&#34;&gt;Playing Offense and Defense with Deepfakes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;介绍了 deepfake 的历史，认为现在 deepfake 类产生的恶意视频人类靠肉眼已经很难辨认。因此开发了一套新的名为 &lt;a href=&#34;https://github.com/zerofox-oss/deepstar&#34; target=&#34;_blank&#34;&gt;deepstar&lt;/a&gt; 检测方法（还没有开源）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/15653591872010/15654420971329.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654425397013.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;img src=&#34;media/15653591872010/15654425651801.jpg&#34; alt=&#34;-w300&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;us-19-Qian-Exploring-The-New-World-Remote-Exploitation-Of-SQLite-And-Curl.pdf&#34; target=&#34;_blank&#34;&gt;Exploring the New World : Remote Exploitation of SQLite and Curl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SQLite 和 cURL 的漏洞发现和利用。腾讯 Blade Team 出品。&lt;/p&gt;

&lt;h2 id=&#34;相关资源的下载&#34;&gt;相关资源的下载&lt;/h2&gt;

&lt;p&gt;一句话下载 BlackHat US19 资料（需要 jq ）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
curl &amp;quot;https://www.blackhat.com/us-19/briefings/schedule/sessions.json&amp;quot; | jq &amp;quot;.sessions[].bh_files[].url&amp;quot; -r | sort | grep -v github | xargs -n1 wget -c
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
